package kaptainwutax.v1_6_4;

import kaptainwutax.biomeutils.source.OverworldBiomeSource;
import kaptainwutax.seedutils.mc.MCVersion;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

import static kaptainwutax.TestFramework.randomBiomeGen;
import static kaptainwutax.TestFramework.singleBlockBiomeGen;
import static org.junit.jupiter.api.Assertions.assertTrue;

public class Overworld {
    // gen 17
    public int[][] base = {{171, 497, 0},{69, 130, 1},{412, 107, 1},{35, 168, 1},{233, 337, 0},{510, 409, 1},{92, 263, 0},{223, 262, 0},{201, 226, 0},{54, 44, 0},{221, 439, 0},{234, 47, 0},{392, 313, 1},{506, 263, 0},{53, 351, 0},{269, 216, 0},{71, 494, 0},{44, 291, 0},{451, 285, 0},{457, 131, 0},{241, 52, 0},{326, 300, 0},{163, 334, 0},{86, 284, 0},{407, 218, 0},{121, 398, 0},{158, 273, 0},{213, 81, 0},{76, 431, 0},{76, 220, 1},{164, 252, 0},{342, 426, 0},{342, 307, 0},{446, 426, 0},{411, 428, 0},{379, 436, 0},{488, 116, 0},{278, 201, 1},{157, 355, 0},{199, 377, 0},{30, 37, 0},{15, 325, 0},{295, 498, 0},{332, 477, 1},{493, 256, 0},{203, 121, 0},{158, 272, 0},{93, 150, 0},{479, 229, 1},{287, 9, 0},{151, 297, 0},{50, 491, 0},{3, 308, 1},{304, 461, 0},{202, 470, 0},{234, 397, 1},{334, 115, 1},{15, 47, 1},{91, 311, 0},{92, 420, 0},{460, 120, 0},{14, 232, 0},{44, 164, 0},{309, 315, 0},{121, 503, 0},{505, 430, 0},{324, 345, 0},{135, 320, 0},{109, 444, 0},{204, 202, 0},{267, 278, 0},{401, 125, 0},{507, 369, 14},{214, 120, 0},{297, 274, 1},{499, 504, 0},{504, 373, 0},{286, 364, 0},{0, 229, 0},{149, 429, 0},{232, 272, 0},{209, 207, 0},{382, 458, 0},{429, 395, 10},{506, 500, 0},{41, 188, 0},{472, 477, 12},{9, 95, 0},{501, 483, 0},{168, 336, 0},{270, 480, 0},{369, 365, 0},{253, 318, 0},{486, 53, 1},{151, 372, 0},{364, 75, 0},{232, 293, 1},{48, 186, 0},{134, 177, 0},{220, 208, 0},{329, 462, 1},{303, 384, 0},{145, 426, 0},{32, 225, 0},{468, 505, 0},{152, 20, 0},{501, 344, 0},{37, 314, 1},{421, 73, 0},{321, 218, 0},{251, 335, 0},{417, 366, 1},{58, 447, 0},{139, 41, 0},{494, 160, 0},{30, 471, 0},{363, 172, 0},{24, 149, 0},{489, 84, 0},{219, 76, 0},{130, 469, 0},{187, 10, 0},{372, 258, 0},{431, 64, 0},{441, 496, 0},{381, 408, 0},{23, 329, 1},{507, 6, 0},{237, 511, 0},{1, 148, 0},{93, 8, 0},{395, 482, 0},{509, 426, 12},{283, 273, 1},{364, 424, 0},{210, 493, 0},{380, 316, 0},{161, 401, 0},{88, 264, 0},{340, 437, 0},{185, 416, 1},{121, 77, 0},{426, 276, 0},{49, 10, 1},{216, 327, 0},{212, 394, 1},{306, 399, 12},{493, 133, 0},{442, 485, 0},{48, 486, 0},{286, 34, 1},{313, 220, 0},{206, 386, 1},{289, 472, 0},{411, 87, 1},{308, 103, 10},{400, 111, 1},{65, 57, 12},{470, 480, 10},{40, 473, 0},{344, 155, 0},{443, 263, 0},{510, 62, 0},{466, 161, 0},{146, 433, 0},{465, 351, 0},{49, 428, 0},{140, 40, 0},{462, 159, 0},{100, 29, 0},{423, 269, 0},{113, 429, 0},{62, 52, 0},{316, 386, 0},{66, 391, 0},{346, 371, 0},{63, 442, 0},{247, 467, 0},{215, 121, 0},{511, 387, 0},{46, 446, 1},{459, 230, 0},{478, 379, 0},{497, 356, 0},{388, 128, 0},{323, 352, 0},{247, 64, 0},{316, 242, 0},{130, 251, 0},{226, 370, 1},{476, 332, 0},{358, 151, 1},{262, 218, 0},{303, 214, 0},{139, 201, 1},{87, 285, 0},{502, 306, 0},{281, 7, 1},{332, 501, 0},{56, 152, 0},{475, 386, 0},{234, 425, 0},{279, 21, 1},{456, 231, 0},{122, 3, 1},{503, 131, 0},{52, 307, 0},{198, 196, 0},{302, 38, 1},{284, 126, 12},{418, 386, 1},{39, 109, 0},{400, 438, 0},{456, 438, 1},{412, 430, 0},{399, 143, 0},{132, 289, 0},{456, 449, 1},{243, 292, 0},{309, 338, 0},{61, 282, 0},{341, 292, 0},{366, 225, 0},{186, 27, 0},{233, 482, 0},{250, 287, 0},{326, 45, 1},{220, 251, 0},{213, 113, 0},{482, 220, 0},{261, 116, 0},{214, 141, 1},{146, 477, 0},{198, 118, 0},{397, 54, 0},{338, 130, 1},{368, 374, 0},{67, 67, 0},{466, 274, 0},{338, 34, 1},{240, 71, 0},{203, 334, 0},{254, 465, 0},{35, 128, 0},{70, 246, 0},{107, 284, 0},{20, 370, 0},{421, 97, 0},{469, 331, 0},{455, 96, 1},{2, 335, 0},{88, 360, 1},{468, 255, 1},{332, 154, 0},{499, 166, 0},{164, 365, 1},};
    // gen 21
    public int[][] biomes = {{171, 497, 0},{69, 130, 0},{412, 107, 0},{35, 168, 3},{233, 337, 0},{510, 409, 0},{92, 263, 4},{223, 262, 0},{201, 226, 0},{54, 44, 0},{221, 439, 0},{234, 47, 2},{392, 313, 2},{506, 263, 0},{53, 351, 0},{269, 216, 12},{71, 494, 0},{44, 291, 3},{451, 285, 0},{457, 131, 0},{241, 52, 1},{326, 300, 4},{163, 334, 0},{86, 284, 0},{407, 218, 0},{121, 398, 0},{158, 273, 0},{213, 81, 6},{76, 431, 0},{76, 220, 0},{164, 252, 0},{342, 426, 12},{342, 307, 0},{446, 426, 21},{411, 428, 21},{379, 436, 1},{488, 116, 0},{278, 201, 12},{157, 355, 0},{199, 377, 0},{30, 37, 1},{15, 325, 0},{295, 498, 0},{332, 477, 0},{493, 256, 0},{203, 121, 1},{158, 272, 0},{93, 150, 0},{479, 229, 0},{287, 9, 0},{151, 297, 0},{50, 491, 0},{3, 308, 1},{304, 461, 4},{202, 470, 0},{234, 397, 0},{334, 115, 0},{15, 47, 0},{91, 311, 0},{92, 420, 0},{460, 120, 0},{14, 232, 4},{44, 164, 1},{309, 315, 0},{121, 503, 0},{505, 430, 0},{324, 345, 0},{135, 320, 0},{109, 444, 0},{204, 202, 0},{267, 278, 0},{401, 125, 0},{507, 369, 0},{214, 120, 3},{297, 274, 2},{499, 504, 0},{504, 373, 0},{286, 364, 0},{0, 229, 3},{149, 429, 0},{232, 272, 0},{209, 207, 0},{382, 458, 0},{429, 395, 6},{506, 500, 0},{41, 188, 6},{472, 477, 0},{9, 95, 0},{501, 483, 0},{168, 336, 0},{270, 480, 0},{369, 365, 0},{253, 318, 0},{486, 53, 12},{151, 372, 0},{364, 75, 0},{232, 293, 0},{48, 186, 6},{134, 177, 0},{220, 208, 0},{329, 462, 0},{303, 384, 0},{145, 426, 0},{32, 225, 3},{468, 505, 0},{152, 20, 0},{501, 344, 0},{37, 314, 0},{421, 73, 0},{321, 218, 21},{251, 335, 0},{417, 366, 0},{58, 447, 0},{139, 41, 0},{494, 160, 0},{30, 471, 0},{363, 172, 0},{24, 149, 0},{489, 84, 0},{219, 76, 5},{130, 469, 0},{187, 10, 0},{372, 258, 5},{431, 64, 0},{441, 496, 0},{381, 408, 3},{23, 329, 0},{507, 6, 3},{237, 511, 0},{1, 148, 21},{93, 8, 0},{395, 482, 0},{509, 426, 0},{283, 273, 5},{364, 424, 2},{210, 493, 0},{380, 316, 21},{161, 401, 0},{88, 264, 2},{340, 437, 5},{185, 416, 12},{121, 77, 0},{426, 276, 0},{49, 10, 0},{216, 327, 0},{212, 394, 0},{306, 399, 0},{493, 133, 0},{442, 485, 0},{48, 486, 0},{286, 34, 1},{313, 220, 1},{206, 386, 0},{289, 472, 6},{411, 87, 0},{308, 103, 5},{400, 111, 0},{65, 57, 0},{470, 480, 0},{40, 473, 0},{344, 155, 0},{443, 263, 0},{510, 62, 0},{466, 161, 0},{146, 433, 0},{465, 351, 0},{49, 428, 0},{140, 40, 0},{462, 159, 0},{100, 29, 0},{423, 269, 0},{113, 429, 0},{62, 52, 0},{316, 386, 0},{66, 391, 0},{346, 371, 0},{63, 442, 0},{247, 467, 0},{215, 121, 3},{511, 387, 0},{46, 446, 0},{459, 230, 0},{478, 379, 0},{497, 356, 0},{388, 128, 0},{323, 352, 0},{247, 64, 0},{316, 242, 12},{130, 251, 0},{226, 370, 12},{476, 332, 0},{358, 151, 0},{262, 218, 12},{303, 214, 0},{139, 201, 0},{87, 285, 0},{502, 306, 0},{281, 7, 0},{332, 501, 0},{56, 152, 5},{475, 386, 0},{234, 425, 0},{279, 21, 5},{456, 231, 0},{122, 3, 0},{503, 131, 0},{52, 307, 0},{198, 196, 0},{302, 38, 0},{284, 126, 2},{418, 386, 0},{39, 109, 0},{400, 438, 0},{456, 438, 1},{412, 430, 0},{399, 143, 0},{132, 289, 0},{456, 449, 2},{243, 292, 0},{309, 338, 0},{61, 282, 0},{341, 292, 0},{366, 225, 4},{186, 27, 0},{233, 482, 0},{250, 287, 0},{326, 45, 0},{220, 251, 0},{213, 113, 1},{482, 220, 0},{261, 116, 5},{214, 141, 3},{146, 477, 0},{198, 118, 2},{397, 54, 0},{338, 130, 0},{368, 374, 0},{67, 67, 0},{466, 274, 0},{338, 34, 0},{240, 71, 3},{203, 334, 0},{254, 465, 0},{35, 128, 0},{70, 246, 0},{107, 284, 0},{20, 370, 0},{421, 97, 0},{469, 331, 0},{455, 96, 0},{2, 335, 0},{88, 360, 0},{468, 255, 0},{332, 154, 0},{499, 166, 0},{164, 365, 0},};
    // gen 22
    public int[][] noise = {{171, 497, 0},{69, 130, 3},{412, 107, 2},{35, 168, 3},{233, 337, 0},{510, 409, 2},{92, 263, 0},{223, 262, 0},{201, 226, 0},{54, 44, 0},{221, 439, 0},{234, 47, 0},{392, 313, 3},{506, 263, 0},{53, 351, 0},{269, 216, 0},{71, 494, 0},{44, 291, 0},{451, 285, 0},{457, 131, 0},{241, 52, 0},{326, 300, 0},{163, 334, 0},{86, 284, 0},{407, 218, 0},{121, 398, 0},{158, 273, 0},{213, 81, 0},{76, 431, 0},{76, 220, 3},{164, 252, 0},{342, 426, 0},{342, 307, 0},{446, 426, 0},{411, 428, 0},{379, 436, 0},{488, 116, 0},{278, 201, 2},{157, 355, 0},{199, 377, 0},{30, 37, 0},{15, 325, 0},{295, 498, 0},{332, 477, 2},{493, 256, 0},{203, 121, 0},{158, 272, 0},{93, 150, 0},{479, 229, 3},{287, 9, 0},{151, 297, 0},{50, 491, 0},{3, 308, 3},{304, 461, 0},{202, 470, 0},{234, 397, 2},{334, 115, 2},{15, 47, 2},{91, 311, 0},{92, 420, 0},{460, 120, 0},{14, 232, 0},{44, 164, 0},{309, 315, 0},{121, 503, 0},{505, 430, 0},{324, 345, 0},{135, 320, 0},{109, 444, 0},{204, 202, 0},{267, 278, 0},{401, 125, 0},{507, 369, 3},{214, 120, 0},{297, 274, 3},{499, 504, 0},{504, 373, 0},{286, 364, 0},{0, 229, 0},{149, 429, 0},{232, 272, 0},{209, 207, 0},{382, 458, 0},{429, 395, 2},{506, 500, 0},{41, 188, 0},{472, 477, 3},{9, 95, 0},{501, 483, 0},{168, 336, 0},{270, 480, 0},{369, 365, 0},{253, 318, 0},{486, 53, 3},{151, 372, 0},{364, 75, 0},{232, 293, 2},{48, 186, 0},{134, 177, 0},{220, 208, 0},{329, 462, 3},{303, 384, 0},{145, 426, 0},{32, 225, 0},{468, 505, 0},{152, 20, 0},{501, 344, 0},{37, 314, 2},{421, 73, 0},{321, 218, 0},{251, 335, 0},{417, 366, 3},{58, 447, 0},{139, 41, 0},{494, 160, 0},{30, 471, 0},{363, 172, 0},{24, 149, 0},{489, 84, 0},{219, 76, 0},{130, 469, 0},{187, 10, 0},{372, 258, 0},{431, 64, 0},{441, 496, 0},{381, 408, 0},{23, 329, 3},{507, 6, 0},{237, 511, 0},{1, 148, 0},{93, 8, 0},{395, 482, 0},{509, 426, 3},{283, 273, 3},{364, 424, 0},{210, 493, 0},{380, 316, 0},{161, 401, 0},{88, 264, 0},{340, 437, 0},{185, 416, 2},{121, 77, 0},{426, 276, 0},{49, 10, 2},{216, 327, 0},{212, 394, 3},{306, 399, 3},{493, 133, 0},{442, 485, 0},{48, 486, 0},{286, 34, 2},{313, 220, 0},{206, 386, 2},{289, 472, 0},{411, 87, 2},{308, 103, 2},{400, 111, 3},{65, 57, 3},{470, 480, 3},{40, 473, 0},{344, 155, 0},{443, 263, 0},{510, 62, 0},{466, 161, 0},{146, 433, 0},{465, 351, 0},{49, 428, 0},{140, 40, 0},{462, 159, 0},{100, 29, 0},{423, 269, 0},{113, 429, 0},{62, 52, 0},{316, 386, 0},{66, 391, 0},{346, 371, 0},{63, 442, 0},{247, 467, 0},{215, 121, 0},{511, 387, 0},{46, 446, 2},{459, 230, 0},{478, 379, 0},{497, 356, 0},{388, 128, 0},{323, 352, 0},{247, 64, 0},{316, 242, 0},{130, 251, 0},{226, 370, 3},{476, 332, 0},{358, 151, 2},{262, 218, 0},{303, 214, 0},{139, 201, 2},{87, 285, 0},{502, 306, 0},{281, 7, 3},{332, 501, 0},{56, 152, 0},{475, 386, 0},{234, 425, 0},{279, 21, 2},{456, 231, 0},{122, 3, 3},{503, 131, 0},{52, 307, 0},{198, 196, 0},{302, 38, 3},{284, 126, 3},{418, 386, 3},{39, 109, 0},{400, 438, 0},{456, 438, 3},{412, 430, 0},{399, 143, 0},{132, 289, 0},{456, 449, 3},{243, 292, 0},{309, 338, 0},{61, 282, 0},{341, 292, 0},{366, 225, 0},{186, 27, 0},{233, 482, 0},{250, 287, 0},{326, 45, 3},{220, 251, 0},{213, 113, 0},{482, 220, 0},{261, 116, 0},{214, 141, 3},{146, 477, 0},{198, 118, 0},{397, 54, 0},{338, 130, 2},{368, 374, 0},{67, 67, 0},{466, 274, 0},{338, 34, 2},{240, 71, 0},{203, 334, 0},{254, 465, 0},{35, 128, 0},{70, 246, 0},{107, 284, 0},{20, 370, 0},{421, 97, 0},{469, 331, 0},{455, 96, 2},{2, 335, 0},{88, 360, 3},{468, 255, 3},{332, 154, 0},{499, 166, 0},{164, 365, 3},};
    // gen 33
    public int[][] variants = {{171, 497, 3},{69, 130, 5},{412, 107, 0},{35, 168, 5},{233, 337, 0},{510, 409, 24},{92, 263, 5},{223, 262, 0},{201, 226, 4},{54, 44, 5},{221, 439, 3},{234, 47, 24},{392, 313, 4},{506, 263, 1},{53, 351, 1},{269, 216, 24},{71, 494, 3},{44, 291, 3},{451, 285, 0},{457, 131, 3},{241, 52, 24},{326, 300, 0},{163, 334, 0},{86, 284, 1},{407, 218, 5},{121, 398, 4},{158, 273, 4},{213, 81, 24},{76, 431, 5},{76, 220, 1},{164, 252, 4},{342, 426, 1},{342, 307, 16},{446, 426, 24},{411, 428, 0},{379, 436, 5},{488, 116, 5},{278, 201, 0},{157, 355, 0},{199, 377, 24},{30, 37, 34},{15, 325, 4},{295, 498, 4},{332, 477, 4},{493, 256, 5},{203, 121, 24},{158, 272, 4},{93, 150, 0},{479, 229, 3},{287, 9, 24},{151, 297, 1},{50, 491, 3},{3, 308, 4},{304, 461, 1},{202, 470, 3},{234, 397, 0},{334, 115, 24},{15, 47, 1},{91, 311, 18},{92, 420, 4},{460, 120, 131},{14, 232, 19},{44, 164, 5},{309, 315, 16},{121, 503, 34},{505, 430, 24},{324, 345, 0},{135, 320, 1},{109, 444, 5},{204, 202, 24},{267, 278, 4},{401, 125, 0},{507, 369, 4},{214, 120, 24},{297, 274, 0},{499, 504, 24},{504, 373, 0},{286, 364, 1},{0, 229, 4},{149, 429, 18},{232, 272, 0},{209, 207, 24},{382, 458, 5},{429, 395, 0},{506, 500, 24},{41, 188, 18},{472, 477, 24},{9, 95, 133},{501, 483, 24},{168, 336, 24},{270, 480, 4},{369, 365, 0},{253, 318, 4},{486, 53, 0},{151, 372, 0},{364, 75, 24},{232, 293, 0},{48, 186, 18},{134, 177, 24},{220, 208, 24},{329, 462, 1},{303, 384, 1},{145, 426, 18},{32, 225, 5},{468, 505, 24},{152, 20, 24},{501, 344, 4},{37, 314, 1},{421, 73, 0},{321, 218, 24},{251, 335, 4},{417, 366, 0},{58, 447, 19},{139, 41, 24},{494, 160, 131},{30, 471, 5},{363, 172, 24},{24, 149, 5},{489, 84, 1},{219, 76, 24},{130, 469, 4},{187, 10, 24},{372, 258, 0},{431, 64, 0},{441, 496, 24},{381, 408, 0},{23, 329, 1},{507, 6, 24},{237, 511, 4},{1, 148, 133},{93, 8, 16},{395, 482, 0},{509, 426, 24},{283, 273, 16},{364, 424, 1},{210, 493, 18},{380, 316, 4},{161, 401, 0},{88, 264, 5},{340, 437, 5},{185, 416, 0},{121, 77, 24},{426, 276, 5},{49, 10, 5},{216, 327, 0},{212, 394, 16},{306, 399, 4},{493, 133, 5},{442, 485, 24},{48, 486, 34},{286, 34, 24},{313, 220, 24},{206, 386, 24},{289, 472, 4},{411, 87, 24},{308, 103, 24},{400, 111, 0},{65, 57, 0},{470, 480, 24},{40, 473, 3},{344, 155, 24},{443, 263, 19},{510, 62, 1},{466, 161, 3},{146, 433, 18},{465, 351, 25},{49, 428, 5},{140, 40, 24},{462, 159, 3},{100, 29, 24},{423, 269, 5},{113, 429, 4},{62, 52, 3},{316, 386, 1},{66, 391, 4},{346, 371, 0},{63, 442, 19},{247, 467, 4},{215, 121, 24},{511, 387, 0},{46, 446, 19},{459, 230, 5},{478, 379, 0},{497, 356, 4},{388, 128, 0},{323, 352, 16},{247, 64, 24},{316, 242, 0},{130, 251, 1},{226, 370, 16},{476, 332, 0},{358, 151, 24},{262, 218, 24},{303, 214, 24},{139, 201, 0},{87, 285, 1},{502, 306, 1},{281, 7, 24},{332, 501, 4},{56, 152, 5},{475, 386, 34},{234, 425, 4},{279, 21, 24},{456, 231, 5},{122, 3, 24},{503, 131, 5},{52, 307, 3},{198, 196, 24},{302, 38, 24},{284, 126, 24},{418, 386, 24},{39, 109, 133},{400, 438, 19},{456, 438, 24},{412, 430, 0},{399, 143, 24},{132, 289, 4},{456, 449, 24},{243, 292, 4},{309, 338, 0},{61, 282, 5},{341, 292, 0},{366, 225, 0},{186, 27, 24},{233, 482, 4},{250, 287, 4},{326, 45, 24},{220, 251, 16},{213, 113, 24},{482, 220, 34},{261, 116, 24},{214, 141, 24},{146, 477, 4},{198, 118, 24},{397, 54, 24},{338, 130, 0},{368, 374, 0},{67, 67, 25},{466, 274, 19},{338, 34, 24},{240, 71, 24},{203, 334, 24},{254, 465, 4},{35, 128, 5},{70, 246, 5},{107, 284, 1},{20, 370, 1},{421, 97, 24},{469, 331, 0},{455, 96, 3},{2, 335, 1},{88, 360, 4},{468, 255, 5},{332, 154, 0},{499, 166, 131},{164, 365, 0},};
    // gen 41
    public int[][] river = {{171, 497, -1},{69, 130, -1},{412, 107, -1},{35, 168, -1},{233, 337, -1},{510, 409, 7},{92, 263, -1},{223, 262, -1},{201, 226, -1},{54, 44, -1},{221, 439, -1},{234, 47, -1},{392, 313, -1},{506, 263, -1},{53, 351, -1},{269, 216, -1},{71, 494, 7},{44, 291, -1},{451, 285, 7},{457, 131, 7},{241, 52, -1},{326, 300, -1},{163, 334, -1},{86, 284, -1},{407, 218, -1},{121, 398, -1},{158, 273, -1},{213, 81, 7},{76, 431, -1},{76, 220, -1},{164, 252, -1},{342, 426, -1},{342, 307, -1},{446, 426, -1},{411, 428, -1},{379, 436, -1},{488, 116, 7},{278, 201, -1},{157, 355, -1},{199, 377, -1},{30, 37, -1},{15, 325, -1},{295, 498, -1},{332, 477, -1},{493, 256, -1},{203, 121, 7},{158, 272, -1},{93, 150, -1},{479, 229, -1},{287, 9, -1},{151, 297, -1},{50, 491, 7},{3, 308, -1},{304, 461, -1},{202, 470, -1},{234, 397, -1},{334, 115, -1},{15, 47, -1},{91, 311, -1},{92, 420, -1},{460, 120, 7},{14, 232, -1},{44, 164, -1},{309, 315, -1},{121, 503, -1},{505, 430, 7},{324, 345, -1},{135, 320, -1},{109, 444, -1},{204, 202, -1},{267, 278, -1},{401, 125, -1},{507, 369, 7},{214, 120, 7},{297, 274, -1},{499, 504, -1},{504, 373, 7},{286, 364, -1},{0, 229, -1},{149, 429, -1},{232, 272, -1},{209, 207, -1},{382, 458, -1},{429, 395, 7},{506, 500, -1},{41, 188, -1},{472, 477, -1},{9, 95, -1},{501, 483, 7},{168, 336, -1},{270, 480, -1},{369, 365, -1},{253, 318, -1},{486, 53, 7},{151, 372, -1},{364, 75, 7},{232, 293, -1},{48, 186, -1},{134, 177, -1},{220, 208, -1},{329, 462, -1},{303, 384, -1},{145, 426, -1},{32, 225, -1},{468, 505, -1},{152, 20, 7},{501, 344, -1},{37, 314, -1},{421, 73, -1},{321, 218, -1},{251, 335, -1},{417, 366, -1},{58, 447, -1},{139, 41, 7},{494, 160, 7},{30, 471, -1},{363, 172, -1},{24, 149, -1},{489, 84, 7},{219, 76, -1},{130, 469, -1},{187, 10, 7},{372, 258, -1},{431, 64, -1},{441, 496, -1},{381, 408, -1},{23, 329, -1},{507, 6, 7},{237, 511, -1},{1, 148, -1},{93, 8, 7},{395, 482, -1},{509, 426, 7},{283, 273, -1},{364, 424, -1},{210, 493, -1},{380, 316, -1},{161, 401, -1},{88, 264, -1},{340, 437, -1},{185, 416, -1},{121, 77, 7},{426, 276, -1},{49, 10, -1},{216, 327, -1},{212, 394, -1},{306, 399, -1},{493, 133, 7},{442, 485, -1},{48, 486, 7},{286, 34, -1},{313, 220, -1},{206, 386, -1},{289, 472, -1},{411, 87, -1},{308, 103, -1},{400, 111, -1},{65, 57, 7},{470, 480, -1},{40, 473, -1},{344, 155, -1},{443, 263, -1},{510, 62, 7},{466, 161, 7},{146, 433, -1},{465, 351, -1},{49, 428, -1},{140, 40, 7},{462, 159, 7},{100, 29, 7},{423, 269, -1},{113, 429, -1},{62, 52, -1},{316, 386, -1},{66, 391, -1},{346, 371, -1},{63, 442, -1},{247, 467, -1},{215, 121, 7},{511, 387, 7},{46, 446, -1},{459, 230, -1},{478, 379, -1},{497, 356, -1},{388, 128, -1},{323, 352, -1},{247, 64, -1},{316, 242, -1},{130, 251, -1},{226, 370, -1},{476, 332, 7},{358, 151, -1},{262, 218, -1},{303, 214, -1},{139, 201, -1},{87, 285, -1},{502, 306, -1},{281, 7, -1},{332, 501, -1},{56, 152, -1},{475, 386, -1},{234, 425, -1},{279, 21, -1},{456, 231, -1},{122, 3, 7},{503, 131, 7},{52, 307, -1},{198, 196, -1},{302, 38, -1},{284, 126, -1},{418, 386, 7},{39, 109, -1},{400, 438, -1},{456, 438, -1},{412, 430, -1},{399, 143, -1},{132, 289, -1},{456, 449, -1},{243, 292, 7},{309, 338, -1},{61, 282, -1},{341, 292, -1},{366, 225, 7},{186, 27, 7},{233, 482, -1},{250, 287, 7},{326, 45, -1},{220, 251, -1},{213, 113, 7},{482, 220, -1},{261, 116, 7},{214, 141, -1},{146, 477, -1},{198, 118, 7},{397, 54, 7},{338, 130, -1},{368, 374, -1},{67, 67, 7},{466, 274, -1},{338, 34, -1},{240, 71, -1},{203, 334, -1},{254, 465, -1},{35, 128, -1},{70, 246, -1},{107, 284, -1},{20, 370, -1},{421, 97, -1},{469, 331, 7},{455, 96, 7},{2, 335, -1},{88, 360, -1},{468, 255, -1},{332, 154, -1},{499, 166, 7},{164, 365, 7},};
    // gen 42
    public int[][] full = {{171, 497, 3}, {69, 130, 5}, {412, 107, 0}, {35, 168, 5}, {233, 337, 0}, {510, 409, 24}, {92, 263, 5}, {223, 262, 0}, {201, 226, 4}, {54, 44, 7}, {221, 439, 3}, {234, 47, 24}, {392, 313, 4}, {506, 263, 1}, {53, 351, 1}, {269, 216, 24}, {71, 494, 7}, {44, 291, 3}, {451, 285, 0}, {457, 131, 7}, {241, 52, 24}, {326, 300, 0}, {163, 334, 0}, {86, 284, 1}, {407, 218, 5}, {121, 398, 7}, {158, 273, 4}, {213, 81, 24}, {76, 431, 5}, {76, 220, 1}, {164, 252, 4}, {342, 426, 1}, {342, 307, 16}, {446, 426, 24}, {411, 428, 0}, {379, 436, 5}, {488, 116, 5}, {278, 201, 0}, {157, 355, 0}, {199, 377, 24}, {30, 37, 34}, {15, 325, 4}, {295, 498, 4}, {332, 477, 4}, {493, 256, 5}, {203, 121, 24}, {158, 272, 4}, {93, 150, 0}, {479, 229, 3}, {287, 9, 24}, {151, 297, 1}, {50, 491, 3}, {3, 308, 4}, {304, 461, 1}, {202, 470, 3}, {234, 397, 0}, {334, 115, 24}, {15, 47, 1}, {91, 311, 7}, {92, 420, 4}, {460, 120, 131}, {14, 232, 19}, {44, 164, 5}, {309, 315, 7}, {121, 503, 34}, {505, 430, 24}, {324, 345, 0}, {135, 320, 1}, {109, 444, 5}, {204, 202, 24}, {267, 278, 4}, {401, 125, 0}, {507, 369, 4}, {214, 120, 24}, {297, 274, 0}, {499, 504, 24}, {504, 373, 0}, {286, 364, 1}, {0, 229, 4}, {149, 429, 18}, {232, 272, 0}, {209, 207, 24}, {382, 458, 7}, {429, 395, 0}, {506, 500, 24}, {41, 188, 18}, {472, 477, 24}, {9, 95, 133}, {501, 483, 24}, {168, 336, 24}, {270, 480, 4}, {369, 365, 0}, {253, 318, 4}, {486, 53, 0}, {151, 372, 0}, {364, 75, 24}, {232, 293, 0}, {48, 186, 18}, {134, 177, 24}, {220, 208, 24}, {329, 462, 1}, {303, 384, 1}, {145, 426, 18}, {32, 225, 5}, {468, 505, 24}, {152, 20, 24}, {501, 344, 4}, {37, 314, 1}, {421, 73, 0}, {321, 218, 24}, {251, 335, 4}, {417, 366, 0}, {58, 447, 19}, {139, 41, 24}, {494, 160, 131}, {30, 471, 5}, {363, 172, 24}, {24, 149, 5}, {489, 84, 1}, {219, 76, 24}, {130, 469, 4}, {187, 10, 24}, {372, 258, 0}, {431, 64, 0}, {441, 496, 24}, {381, 408, 0}, {23, 329, 1}, {507, 6, 24}, {237, 511, 4}, {1, 148, 133}, {93, 8, 7}, {395, 482, 0}, {509, 426, 24}, {283, 273, 16}, {364, 424, 1}, {210, 493, 18}, {380, 316, 4}, {161, 401, 0}, {88, 264, 5}, {340, 437, 5}, {185, 416, 0}, {121, 77, 24}, {426, 276, 5}, {49, 10, 5}, {216, 327, 0}, {212, 394, 16}, {306, 399, 4}, {493, 133, 5}, {442, 485, 24}, {48, 486, 34}, {286, 34, 24}, {313, 220, 24}, {206, 386, 24}, {289, 472, 4}, {411, 87, 24}, {308, 103, 24}, {400, 111, 0}, {65, 57, 0}, {470, 480, 24}, {40, 473, 3}, {344, 155, 24}, {443, 263, 19}, {510, 62, 1}, {466, 161, 3}, {146, 433, 18}, {465, 351, 25}, {49, 428, 5}, {140, 40, 24}, {462, 159, 3}, {100, 29, 24}, {423, 269, 5}, {113, 429, 4}, {62, 52, 3}, {316, 386, 1}, {66, 391, 4}, {346, 371, 0}, {63, 442, 19}, {247, 467, 4}, {215, 121, 24}, {511, 387, 0}, {46, 446, 19}, {459, 230, 5}, {478, 379, 0}, {497, 356, 4}, {388, 128, 0}, {323, 352, 16}, {247, 64, 24}, {316, 242, 0}, {130, 251, 1}, {226, 370, 16}, {476, 332, 0}, {358, 151, 24}, {262, 218, 24}, {303, 214, 24}, {139, 201, 0}, {87, 285, 1}, {502, 306, 1}, {281, 7, 24}, {332, 501, 4}, {56, 152, 5}, {475, 386, 34}, {234, 425, 4}, {279, 21, 24}, {456, 231, 5}, {122, 3, 24}, {503, 131, 5}, {52, 307, 3}, {198, 196, 24}, {302, 38, 24}, {284, 126, 24}, {418, 386, 24}, {39, 109, 133}, {400, 438, 19}, {456, 438, 24}, {412, 430, 0}, {399, 143, 24}, {132, 289, 4}, {456, 449, 24}, {243, 292, 4}, {309, 338, 0}, {61, 282, 5}, {341, 292, 0}, {366, 225, 0}, {186, 27, 24}, {233, 482, 4}, {250, 287, 4}, {326, 45, 24}, {220, 251, 16}, {213, 113, 24}, {482, 220, 34}, {261, 116, 24}, {214, 141, 24}, {146, 477, 4}, {198, 118, 24}, {397, 54, 24}, {338, 130, 0}, {368, 374, 0}, {67, 67, 25}, {466, 274, 19}, {338, 34, 24}, {240, 71, 24}, {203, 334, 24}, {254, 465, 4}, {35, 128, 5}, {70, 246, 5}, {107, 284, 7}, {20, 370, 1}, {421, 97, 24}, {469, 331, 0}, {455, 96, 3}, {2, 335, 1}, {88, 360, 4}, {468, 255, 5}, {332, 154, 0}, {499, 166, 131}, {164, 365, 0},};
    // gen 43
    public int[][] voronoi = {{171, 497, 5}, {69, 130, 1}, {412, 107, 0}, {35, 168, 1}, {233, 337, 5}, {510, 409, 0}, {92, 263, 3}, {223, 262, 34}, {201, 226, 3}, {54, 44, 0}, {221, 439, 5}, {234, 47, 5}, {392, 313, 24}, {506, 263, 0}, {53, 351, 1}, {269, 216, 7}, {71, 494, 19}, {44, 291, 1}, {451, 285, 24}, {457, 131, 24}, {241, 52, 5}, {326, 300, 24}, {163, 334, 5}, {86, 284, 3}, {407, 218, 24}, {121, 398, 133}, {158, 273, 34}, {213, 81, 5}, {76, 431, 133}, {76, 220, 1}, {164, 252, 34}, {342, 426, 16}, {342, 307, 24}, {446, 426, 24}, {411, 428, 0}, {379, 436, 0}, {488, 116, 0}, {278, 201, 5}, {157, 355, 133}, {199, 377, 133}, {30, 37, 16}, {15, 325, 1}, {295, 498, 5}, {332, 477, 5}, {493, 256, 0}, {203, 121, 5}, {158, 272, 34}, {93, 150, 1}, {479, 229, 24}, {287, 9, 19}, {151, 297, 34}, {50, 491, 19}, {3, 308, 1}, {304, 461, 5}, {202, 470, 5}, {234, 397, 5}, {334, 115, 0}, {15, 47, 1}, {91, 311, 3}, {92, 420, 133}, {460, 120, 24}, {14, 232, 1}, {44, 164, 1}, {309, 315, 24}, {121, 503, 5}, {505, 430, 0}, {324, 345, 0}, {135, 320, 3}, {109, 444, 133}, {204, 202, 3}, {267, 278, 3}, {401, 125, 24}, {507, 369, 0}, {214, 120, 5}, {297, 274, 24}, {499, 504, 0}, {504, 373, 0}, {286, 364, 0}, {0, 229, 1}, {149, 429, 133}, {232, 272, 34}, {209, 207, 3}, {382, 458, 0}, {429, 395, 0}, {506, 500, 0}, {41, 188, 1}, {472, 477, 0}, {9, 95, 1}, {501, 483, 0}, {168, 336, 5}, {270, 480, 5}, {369, 365, 0}, {253, 318, 3}, {486, 53, 0}, {151, 372, 133}, {364, 75, 0}, {232, 293, 3}, {48, 186, 1}, {134, 177, 34}, {220, 208, 3}, {329, 462, 5}, {303, 384, 0}, {145, 426, 133}, {32, 225, 1}, {468, 505, 0}, {152, 20, 5}, {501, 344, 24}, {37, 314, 1}, {421, 73, 0}, {321, 218, 0}, {251, 335, 25}, {417, 366, 24}, {58, 447, 133}, {139, 41, 5}, {494, 160, 24}, {30, 471, 133}, {363, 172, 0}, {24, 149, 1}, {489, 84, 0}, {219, 76, 5}, {130, 469, 133}, {187, 10, 5}, {372, 258, 24}, {431, 64, 0}, {441, 496, 0}, {381, 408, 24}, {23, 329, 1}, {507, 6, 24}, {237, 511, 5}, {1, 148, 18}, {93, 8, 5}, {395, 482, 0}, {509, 426, 0}, {283, 273, 25}, {364, 424, 0}, {210, 493, 19}, {380, 316, 24}, {161, 401, 133}, {88, 264, 3}, {340, 437, 7}, {185, 416, 133}, {121, 77, 16}, {426, 276, 24}, {49, 10, 16}, {216, 327, 5}, {212, 394, 133}, {306, 399, 16}, {493, 133, 0}, {442, 485, 24}, {48, 486, 19}, {286, 34, 5}, {313, 220, 0}, {206, 386, 133}, {289, 472, 5}, {411, 87, 0}, {308, 103, 5}, {400, 111, 0}, {65, 57, 0}, {470, 480, 0}, {40, 473, 133}, {344, 155, 0}, {443, 263, 0}, {510, 62, 0}, {466, 161, 24}, {146, 433, 133}, {465, 351, 24}, {49, 428, 133}, {140, 40, 5}, {462, 159, 24}, {100, 29, 16}, {423, 269, 24}, {113, 429, 133}, {62, 52, 0}, {316, 386, 0}, {66, 391, 133}, {346, 371, 0}, {63, 442, 133}, {247, 467, 5}, {215, 121, 5}, {511, 387, 0}, {46, 446, 133}, {459, 230, 0}, {478, 379, 0}, {497, 356, 24}, {388, 128, 24}, {323, 352, 0}, {247, 64, 5}, {316, 242, 24}, {130, 251, 34}, {226, 370, 5}, {476, 332, 0}, {358, 151, 0}, {262, 218, 7}, {303, 214, 25}, {139, 201, 34}, {87, 285, 3}, {502, 306, 24}, {281, 7, 19}, {332, 501, 5}, {56, 152, 1}, {475, 386, 0}, {234, 425, 5}, {279, 21, 19}, {456, 231, 0}, {122, 3, 5}, {503, 131, 0}, {52, 307, 1}, {198, 196, 3}, {302, 38, 5}, {284, 126, 19}, {418, 386, 24}, {39, 109, 1}, {400, 438, 0}, {456, 438, 24}, {412, 430, 0}, {399, 143, 24}, {132, 289, 34}, {456, 449, 24}, {243, 292, 3}, {309, 338, 0}, {61, 282, 3}, {341, 292, 24}, {366, 225, 24}, {186, 27, 5}, {233, 482, 19}, {250, 287, 3}, {326, 45, 5}, {220, 251, 34}, {213, 113, 5}, {482, 220, 24}, {261, 116, 19}, {214, 141, 19}, {146, 477, 133}, {198, 118, 5}, {397, 54, 0}, {338, 130, 0}, {368, 374, 0}, {67, 67, 16}, {466, 274, 0}, {338, 34, 5}, {240, 71, 5}, {203, 334, 133}, {254, 465, 5}, {35, 128, 1}, {70, 246, 3}, {107, 284, 3}, {20, 370, 19}, {421, 97, 0}, {469, 331, 24}, {455, 96, 24}, {2, 335, 1}, {88, 360, 133}, {468, 255, 0}, {332, 154, 16}, {499, 166, 24}, {164, 365, 133},};
    private OverworldBiomeSource overworldBiomeSource;
    private int size;
    private static final String version = "1.6.4";

    @BeforeEach
    public void setup() {
        this.overworldBiomeSource = new OverworldBiomeSource(MCVersion.v1_6_4, 489435348641386L);
        this.size = 16;
    }

    @Test
    @DisplayName("Test Biomes against data for " + version)
    public void testBiomes() {
        singleBlockBiomeGen(overworldBiomeSource.debug, 269, 216,12);
        //randomBiomeGen(size, overworldBiomeSource.biomes, biomes);
    }

    @Test
    @DisplayName("Test Noise against data for " + version)
    public void testNoise() {
        // this can not be tested as there is no existence of a noise + 2 scaled in that version (due to no hills, inserting a debug is the only possibility)
        // randomBiomeGen(size, overworldBiomeSource.debug, noise);
        assertTrue(true);
    }

    @Test
    @DisplayName("Test full mixing river with biomes against data for " + version)
    public void testFull() {
        randomBiomeGen(size, overworldBiomeSource.full, full);
    }

    @Test
    @DisplayName("Test voronoi against data for " + version)
    public void testVoronoi() {
        randomBiomeGen(size, overworldBiomeSource.voronoi, voronoi);
    }

    @Test
    @DisplayName("Test river against data for " + version)
    public void testRiver() {
        randomBiomeGen(size, overworldBiomeSource.river, river);
    }

    @Test
    @DisplayName("Test Variants against data for " + version)
    public void testVariants() {
        randomBiomeGen(size, overworldBiomeSource.variants, variants);
    }

    @Test
    @DisplayName("Test First stack against data for " + version)
    public void testBase() {
        randomBiomeGen(size, overworldBiomeSource.base, base);
    }
}


/*
#define LAYER 24
#define X 412
#define Z 107
#define VERSION MC_1_13
void multiple(){
    initBiomes();
    LayerStack g = setupGenerator(VERSION);
    applySeed(&g, 541515181818);
    int *map = allocCache(&g.layers[g.layerNum - 1], 1,1);

    auto *r= new Random(4227552225777);
    int size=16;
    printf("{");
    for (int i = 0; i < size; ++i) {
        for (int j = 0; j < size; ++j) {
            int x=r->nextInt(512);
            int z=r->nextInt(512);
            genArea(&g.layers[LAYER], map,x,z ,1,1);
            printf("{%d, %d, %d}, ",x,z,map[0] );
        }
    }
    printf("};\n");
}

void one(){
    initBiomes();
    LayerStack g = setupGenerator(VERSION);
    applySeed(&g, 541515181818);
    int *map = allocCache(&g.layers[g.layerNum - 1], 1,1);
    int x=X;
    int z=Z;
    genArea(&g.layers[LAYER], map,x,z ,1,1);
    printf("{%d, %d, %d}, \n",x,z,map[0] );
}

int main(){
    multiple();
}
 */